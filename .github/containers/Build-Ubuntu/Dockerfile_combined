# ----------- Prebuild Stage -----------
ARG BASE_IMAGE=ubuntu:22.04
ARG DEBIAN_FRONTEND=noninteractive
ARG POSTGRES_VERSION=16
ARG DEB_PACKAGE_REL_PATH=packages/postgresql-16-documentdb-1_1.0.0_amd64.deb

FROM ${BASE_IMAGE} AS prebuild
ARG DEBIAN_FRONTEND
ARG POSTGRES_VERSION
ARG DEB_PACKAGE_REL_PATH

# Base tools + locale (single layer)
RUN apt-get update; \
    apt-get install -y --no-install-recommends \
        wget \
        gnupg2 \
        lsb-release \
        ca-certificates \
        locales \
        sudo \
    ; \
    echo "en_US.UTF-8 UTF-8" > /etc/locale.gen; \
    locale-gen; \
    rm -rf /var/lib/apt/lists/*

# Minimal locale env (others inherit)
ENV LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

# Add PostgreSQL upstream repo (modern keyring usage) + install extensions
RUN install -d -m 0755 /etc/apt/keyrings; \
    wget -qO /etc/apt/keyrings/pgdg.asc https://www.postgresql.org/media/keys/ACCC4CF8.asc; \
    echo "deb [signed-by=/etc/apt/keyrings/pgdg.asc] http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main ${POSTGRES_VERSION}" \
        > /etc/apt/sources.list.d/pgdg.list; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
        postgresql-${POSTGRES_VERSION} \
        postgresql-${POSTGRES_VERSION}-cron \
        postgresql-${POSTGRES_VERSION}-pgvector \
        postgresql-${POSTGRES_VERSION}-postgis-3 \
        postgresql-${POSTGRES_VERSION}-rum \
    ; \
    rm -rf /var/lib/apt/lists/*

WORKDIR /scripts
COPY scripts/start_oss_server.sh scripts/utils.sh scripts/setup_psqlrc.sh /scripts/

RUN mkdir -p /tmp/install_setup
COPY ${DEB_PACKAGE_REL_PATH} /tmp/install_setup/
RUN dpkg -i /tmp/install_setup/$(basename "$DEB_PACKAGE_REL_PATH")

RUN useradd -ms /bin/bash documentdb -G sudo
RUN echo "%sudo ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/no-pass-ask

# ----------- Gateway Build Stage -----------
ARG BASE_ARCH=AMD64
ARG BASE_VERSION=0.104.0
FROM prebuild AS stage
ARG BASE_ARCH
ARG BASE_VERSION

ENV RUSTUP_HOME=/home/documentdb/.rustup \
    CARGO_HOME=/home/documentdb/.cargo \
    PATH=/home/documentdb/.cargo/bin:$PATH

RUN apt-get update; \
    apt-get install -y --no-install-recommends jq curl sudo git make build-essential openssl pkg-config libssl-dev; \
    rm -rf /var/lib/apt/lists/*; \
    curl -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path --default-toolchain stable; \
    rustc --version; \
    cargo --version

USER documentdb
WORKDIR /home/documentdb/code

COPY . /home/documentdb/code

RUN sudo chown -R documentdb:documentdb /home/documentdb/code

WORKDIR /home/documentdb/code/pg_documentdb_gw

# Compile the code
RUN sudo chown -R documentdb:documentdb /home/documentdb/.cargo
# RUN cargo build
ENV RUSTFLAGS="-C strip=symbols"
ENV CARGO_PROFILE_RELEASE_LTO=thin
ENV CARGO_PROFILE_RELEASE_CODEGEN_UNITS=1
ENV CARGO_PROFILE_RELEASE_PANIC=abort
RUN cargo build --release && strip target/release/documentdb_gateway || true

# ----------- Final Gateway Image -----------
ARG BASE_ARCH=AMD64
ARG BASE_VERSION=0.104.0
FROM prebuild AS final
ARG BASE_ARCH
ARG BASE_VERSION
ARG POSTGRES_VERSION

RUN sudo groupmod -g 103 postgres && sudo usermod -u 105 -g 103 postgres
RUN sudo apt-get update && \
    sudo apt-get install -y --no-install-recommends \
    jq openssl lsof && \
    # sudo apt-get upgrade -y && \
    sudo rm -rf /var/lib/apt/lists/*

ENV LANGUAGE=en_US.UTF-8 \
    TERM=xterm-256color
ENV ENFORCE_SSL="true" \
    CERT_PATH="" \
    KEY_FILE="" \
    DATA_PATH="/data" \
    DOCUMENTDB_PORT="10260" \
    ENABLE_TELEMETRY="false" \
    LOG_LEVEL="info" \
    USERNAME="default_user" \
    CREATE_USER="true" \
    START_POSTGRESQL="true" \
    POSTGRESQL_PORT="9712" \
    OWNER="documentdb" \
    ALLOW_EXTERNAL_CONNECTIONS="false" \
    PATH=/usr/lib/postgresql/${POSTGRES_VERSION}/bin:$PATH

RUN sudo mkdir /home/documentdb/gateway
COPY --from=stage /home/documentdb/code/pg_documentdb_gw/target/release/documentdb_gateway /home/documentdb/gateway/documentdb_gateway
COPY --from=stage /home/documentdb/code/pg_documentdb_gw/SetupConfiguration.json /home/documentdb/gateway/SetupConfiguration.json
COPY --from=stage /home/documentdb/code/scripts/start_oss_server.sh /home/documentdb/gateway/scripts/start_oss_server.sh
COPY --from=stage /home/documentdb/code/scripts/build_and_start_gateway.sh /home/documentdb/gateway/scripts/build_and_start_gateway.sh
COPY --from=stage /home/documentdb/code/scripts/emulator_entrypoint.sh /home/documentdb/gateway/scripts/emulator_entrypoint.sh
COPY --from=stage /home/documentdb/code/scripts/utils.sh /home/documentdb/gateway/scripts/utils.sh
COPY --from=stage /home/documentdb/code/scripts/setup_psqlrc.sh /home/documentdb/gateway/scripts/setup_psqlrc.sh

USER documentdb
RUN sudo chown -R documentdb:documentdb /home/documentdb/gateway

WORKDIR /home/documentdb/gateway/scripts
ENTRYPOINT ["/bin/bash", "-c", "/home/documentdb/gateway/scripts/emulator_entrypoint.sh \"$@\"", "--"]
